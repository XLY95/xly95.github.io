let sourceImage=null;let originalImage=null;let canvas,ctx,floatCanvas,floatCtx;let originalCanvasData=null;let startTime;let currentParams={saturation:100,brightness:100,contrast:100,diffusion:50,ditherAlg:'floydSteinberg'};let currentMode='image';let canvasRotation=0;let isDrawing=false;let lastX=0;let lastY=0;let currentTool='pen';let brushSize=3;let brushColor='#000000';let imageScale=100;let imageOffset={x:0,y:0};let isDraggingImage=false;let dragStartPos={x:0,y:0};let shiftKeyPressed=false;let imageRotation=0;let isDrawingModeActive=false;let isDragging=false;let dragOffset={x:0,y:0};let isResizing=false;let bleDevice,gattServer;let epdService,epdCharacteristic;let msgIndex,appVersion,textDecoder;const EpdCmd={SET_PINS:0xAA,INIT:0xA9,CLEAR:0xA8,SEND_CMD:0xA7,SEND_DATA:0xA6,REFRESH:0xA5,SLEEP:0xA4,SET_TIME:0xA3,WEEK_START:0xA2,WRITE_IMG:0xA1,SET_CONFIG:0xA0,SYS_RESET:0xAB,SYS_SLEEP:0xAC,CFG_ERASE:0xAD,SET_MODE:0xAE};const DisplayMode={IMAGE:0x00,CLOCK:0x01,CALENDAR:0x02};const canvasSizes=[{name:'2.13_122_250',width:122,height:250},{name:'4.2_400_300',width:400,height:300},{name:'7.5_800_480',width:800,height:480}];const imageUpload=document.getElementById('imageFile');const previewCanvas=document.getElementById('previewCanvas');const floatPreviewCanvas=document.getElementById('floatPreviewCanvas');const noImagePlaceholder=document.getElementById('noImagePlaceholder');const processedImageInfo=document.getElementById('processedImageInfo');const btnProcess=document.getElementById('btnProcess');const btnSend=document.getElementById('btnSend');const btnDownload=document.getElementById('btnDownload');const btnReset=document.getElementById('btnReset');const btnClearLog=document.getElementById('btnClearLog');const btnBlackWhite=document.getElementById('btnBlackWhite');const btnBlackWhiteRed=document.getElementById('btnBlackWhiteRed');const ditherMode=document.getElementById('ditherMode');const ditherAlg=document.getElementById('ditherAlg');const logContainer=document.getElementById('logContainer');const statusContainer=document.getElementById('statusContainer');const floatingCanvasContainer=document.getElementById('floatingCanvasContainer');const toggleCanvasFloat=document.getElementById('toggleCanvasFloat');const closeCanvas=document.getElementById('closeCanvas');const canvasResizeHandle=document.getElementById('canvasResizeHandle');const imageScaleSlider=document.getElementById('imageScale');const imageScaleValue=document.getElementById('imageScaleValue');const addTextBtn=document.getElementById('addTextBtn');const btnSetTime=document.getElementById('btnSetTime');const btnClockMode=document.getElementById('btnClockMode');const btnCalendarMode=document.getElementById('btnCalendarMode');const btnClearScreen=document.getElementById('btnClearScreen');const timeDialog=document.getElementById('timeDialog');const datetimeInput=document.getElementById('datetimeInput');const closeTimeDialog=document.getElementById('closeTimeDialog');const confirmTimeBtn=document.getElementById('confirmTimeBtn');const imageWidthInput=document.getElementById('imageWidth');const imageHeightInput=document.getElementById('imageHeight');const toolPen=document.getElementById('toolPen');const toolEraser=document.getElementById('toolEraser');const toolText=document.getElementById('toolText');const toolClear=document.getElementById('toolClear');const brushSizeSlider=document.getElementById('brushSize');const fontSizeInput=document.getElementById('fontSize');const fontFamilySelect=document.getElementById('fontFamily');const textInput=document.getElementById('textInput');const drawingStatus=document.getElementById('drawingStatus');const currentToolEl=document.getElementById('currentTool');const currentSizeEl=document.getElementById('currentSize');const drawingModeIndicator=document.getElementById('drawingModeIndicator');const toggleDrawingModeBtn=document.getElementById('toggleDrawingMode');const floatToggleDrawingModeBtn=document.getElementById('floatToggleDrawingMode');const sliders={saturation:document.getElementById('saturation'),brightness:document.getElementById('brightness'),contrast:document.getElementById('contrast'),diffusion:document.getElementById('diffusion')};const sliderValues={saturation:document.getElementById('saturationValue'),brightness:document.getElementById('brightnessValue'),contrast:document.getElementById('contrastValue'),diffusion:document.getElementById('diffusionValue')};function init(){canvas=previewCanvas;ctx=canvas.getContext('2d');floatCanvas=floatPreviewCanvas;floatCtx=floatCanvas.getContext('2d');updateCanvasSize();const now=new Date();const localDateTime=new Date(now.getTime()-now.getTimezoneOffset()*60000).toISOString().slice(0,16);datetimeInput.value=localDateTime;canvas.addEventListener('mousedown',startDrawing);canvas.addEventListener('mousemove',draw);canvas.addEventListener('mouseup',stopDrawing);canvas.addEventListener('mouseout',stopDrawing);floatCanvas.addEventListener('mousedown',startDrawingFloat);floatCanvas.addEventListener('mousemove',drawFloat);floatCanvas.addEventListener('mouseup',stopDrawing);floatCanvas.addEventListener('mouseout',stopDrawing);canvas.addEventListener('touchstart',handleTouchStart,{passive:false});canvas.addEventListener('touchmove',handleTouchMove,{passive:false});canvas.addEventListener('touchend',handleTouchEnd);canvas.addEventListener('touchcancel',handleTouchEnd);floatCanvas.addEventListener('touchstart',handleFloatTouchStart,{passive:false});floatCanvas.addEventListener('touchmove',handleFloatTouchMove,{passive:false});floatCanvas.addEventListener('touchend',handleTouchEnd);floatCanvas.addEventListener('touchcancel',handleTouchEnd);document.addEventListener('keydown',(e)=>{if(e.key==='Shift'){shiftKeyPressed=true;if(sourceImage&&!isDrawingModeActive){canvas.style.cursor='move';floatCanvas.style.cursor='move'}}});document.addEventListener('keyup',(e)=>{if(e.key==='Shift'){shiftKeyPressed=false;updateCursorStyle()}});toggleDrawingModeBtn.addEventListener('click',toggleDrawingMode);floatToggleDrawingModeBtn.addEventListener('click',toggleDrawingMode);btnProcess.addEventListener('click',processImage);btnSend.addEventListener('click',sendimg);btnDownload.addEventListener('click',downloadImageFile);btnReset.addEventListener('click',resetProcessing);btnClearLog.addEventListener('click',clearLog);toggleCanvasFloat.addEventListener('click',toggleCanvas);closeCanvas.addEventListener('click',hideCanvas);btnSetTime.addEventListener('click',showTimeDialog);closeTimeDialog.addEventListener('click',hideTimeDialog);confirmTimeBtn.addEventListener('click',setTime);btnClockMode.addEventListener('click',setClockMode);btnCalendarMode.addEventListener('click',setCalendarMode);btnClearScreen.addEventListener('click',clearScreen);brushSizeSlider.addEventListener('input',function(){brushSize=parseInt(this.value);currentSizeEl.textContent=brushSize});const canvasHandle=floatingCanvasContainer.querySelector('div:first-child');canvasHandle.addEventListener('mousedown',startDrag);document.addEventListener('mousemove',drag);document.addEventListener('mouseup',stopDrag);canvasResizeHandle.addEventListener('mousedown',startResize);document.addEventListener('mousemove',resize);document.addEventListener('mouseup',stopResize);Object.keys(sliders).forEach(key=>{sliders[key].addEventListener('input',(e)=>{currentParams[key]=parseInt(e.target.value);sliderValues[key].textContent=`${currentParams[key]}%`})});document.getElementById('canvasSize').addEventListener('change',function(){const selectedSize=getSelectedCanvasSize();imageWidthInput.value=selectedSize.width;imageHeightInput.value=selectedSize.height});addLog("欢迎使用墨水屏蓝牙图片工具！");updateButtonStatus()}function toggleDrawingMode(){isDrawingModeActive=!isDrawingModeActive;if(isDrawingModeActive){toggleDrawingModeBtn.innerHTML='<i class="fa fa-stop mr-1"></i>退出绘画';toggleDrawingModeBtn.classList.remove('bg-primary');toggleDrawingModeBtn.classList.add('bg-amber-500');floatToggleDrawingModeBtn.innerHTML='<i class="fa fa-stop mr-1"></i>退出绘画';floatToggleDrawingModeBtn.classList.add('text-amber-300');drawingModeIndicator.classList.remove('hidden');addLog("已进入绘画模式，图片已锁定无法移动")}else{toggleDrawingModeBtn.innerHTML='<i class="fa fa-pencil mr-1"></i>开始绘画';toggleDrawingModeBtn.classList.remove('bg-amber-500');toggleDrawingModeBtn.classList.add('bg-primary');floatToggleDrawingModeBtn.innerHTML='<i class="fa fa-pencil mr-1"></i>开始绘画';floatToggleDrawingModeBtn.classList.remove('text-amber-300');drawingModeIndicator.classList.add('hidden');addLog("已退出绘画模式，图片可以移动")}updateCursorStyle()}function updateCursorStyle(){if(isDrawingModeActive){if(currentTool==='pen'){canvas.style.cursor='crosshair';floatCanvas.style.cursor='crosshair'}else if(currentTool==='eraser'){canvas.style.cursor='url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'24\' height=\'24\' viewBox=\'0 0 24 24\' fill=\'none\' stroke=\'black\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-linejoin=\'round\'%3E%3Cpath d=\'M18 13L5 5\'/%3E%3C/svg%3E") 0 24, auto';floatCanvas.style.cursor='url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'24\' height=\'24\' viewBox=\'0 0 24 24\' fill=\'none\' stroke=\'black\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-linejoin=\'round\'%3E%3Cpath d=\'M18 13L5 5\'/%3E%3C/svg%3E") 0 24, auto'}else if(currentTool==='text'){canvas.style.cursor='text';floatCanvas.style.cursor='text'}}else{if(shiftKeyPressed&&sourceImage){canvas.style.cursor='move';floatCanvas.style.cursor='move'}else if(currentTool==='pen'){canvas.style.cursor='crosshair';floatCanvas.style.cursor='crosshair'}else if(currentTool==='eraser'){canvas.style.cursor='url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'24\' height=\'24\' viewBox=\'0 0 24 24\' fill=\'none\' stroke=\'black\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-linejoin=\'round\'%3E%3Cpath d=\'M18 13L5 5\'/%3E%3C/svg%3E") 0 24, auto';floatCanvas.style.cursor='url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'24\' height=\'24\' viewBox=\'0 0 24 24\' fill=\'none\' stroke=\'black\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-linejoin=\'round\'%3E%3Cpath d=\'M18 13L5 5\'/%3E%3C/svg%3E") 0 24, auto'}else if(currentTool==='text'){canvas.style.cursor='text';floatCanvas.style.cursor='text'}}}function setDrawingTool(tool){currentTool=tool;[toolPen,toolEraser,toolText,toolClear].forEach(el=>{el.classList.remove('active')});switch(tool){case'pen':toolPen.classList.add('active');currentToolEl.textContent='画笔';break;case'eraser':toolEraser.classList.add('active');currentToolEl.textContent='橡皮擦';break;case'text':toolText.classList.add('active');currentToolEl.textContent='文字';break}currentSizeEl.textContent=brushSize;drawingStatus.classList.remove('hidden');updateCursorStyle()}function setBrushColor(color){brushColor=color;document.getElementById('customColor').value=color;addLog(`已选择画笔颜色:${color}`)}function getCanvasCoordinates(canvas,e,isTouch=false){const rect=canvas.getBoundingClientRect();const scaleX=canvas.width/rect.width;const scaleY=canvas.height/rect.height;let x,y;if(isTouch){x=(e.touches[0].clientX-rect.left)*scaleX;y=(e.touches[0].clientY-rect.top)*scaleY}else{x=(e.clientX-rect.left)*scaleX;y=(e.clientY-rect.top)*scaleY}return{x,y}}function isPointOnImage(x,y){if(!sourceImage)return false;const scale=imageScale/100;let scaledWidth=sourceImage.width*scale;let scaledHeight=sourceImage.height*scale;if(imageRotation%180!==0){[scaledWidth,scaledHeight]=[scaledHeight,scaledWidth]}return x>=imageOffset.x&&x<=imageOffset.x+scaledWidth&&y>=imageOffset.y&&y<=imageOffset.y+scaledHeight}function startDrawing(e){const coords=getCanvasCoordinates(canvas,e);startDrawingCommon(coords)}function startDrawingFloat(e){const coords=getCanvasCoordinates(floatCanvas,e);startDrawingCommon(coords)}function handleTouchStart(e){e.preventDefault();if(e.touches.length!==1)return;const coords=getCanvasCoordinates(canvas,e,true);startDrawingCommon(coords)}function handleFloatTouchStart(e){e.preventDefault();if(e.touches.length!==1)return;const coords=getCanvasCoordinates(floatCanvas,e,true);startDrawingCommon(coords)}function startDrawingCommon(coords){lastX=coords.x;lastY=coords.y;isDrawing=true;if(!isDrawingModeActive&&sourceImage&&(isPointOnImage(coords.x,coords.y)&&currentTool!=='text')){isDraggingImage=true;dragStartPos={x:coords.x,y:coords.y};isDrawing=false;canvas.style.cursor='move';floatCanvas.style.cursor='move'}else if(currentTool==='text'){addTextToCanvas(coords.x,coords.y);isDrawing=false}}function draw(e){const coords=getCanvasCoordinates(canvas,e);drawCommon(coords)}function drawFloat(e){const coords=getCanvasCoordinates(floatCanvas,e);drawCommon(coords)}function handleTouchMove(e){e.preventDefault();if(e.touches.length!==1)return;const coords=getCanvasCoordinates(canvas,e,true);drawCommon(coords)}function handleFloatTouchMove(e){e.preventDefault();if(e.touches.length!==1)return;const coords=getCanvasCoordinates(floatCanvas,e,true);drawCommon(coords)}function drawCommon(coords){if(isDraggingImage&&!isDrawingModeActive){const dx=coords.x-dragStartPos.x;const dy=coords.y-dragStartPos.y;imageOffset.x+=dx;imageOffset.y+=dy;dragStartPos=coords;redrawImageWithScaleAndOffset();return}if(!isDrawing)return;drawOnCanvas(lastX,lastY,coords.x,coords.y);lastX=coords.x;lastY=coords.y;syncCanvases()}function stopDrawing(){isDrawing=false;if(isDraggingImage){isDraggingImage=false;updateCursorStyle()}}function handleTouchEnd(){stopDrawing()}function drawOnCanvas(x1,y1,x2,y2){ctx.save();ctx.lineCap='round';ctx.lineJoin='round';ctx.lineWidth=brushSize;if(currentTool==='pen'){ctx.strokeStyle=brushColor}else if(currentTool==='eraser'){ctx.strokeStyle='#FFFFFF';ctx.lineWidth=brushSize*2}ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.restore()}function addTextToCanvas(x,y){const text=textInput.value||'请输入文字';const fontSize=parseInt(fontSizeInput.value);const fontFamily=fontFamilySelect.value;if(!text.trim())return;ctx.save();ctx.font=`${fontSize}px ${fontFamily}`;ctx.fillStyle=brushColor;ctx.textBaseline='top';ctx.fillText(text,x,y);ctx.restore();syncCanvases();addLog(`已添加文字:"${text}"`)}function addTextManually(){setDrawingTool('text');if(textInput.value.trim()){const selectedSize=getSelectedCanvasSize();const centerX=selectedSize.width/2;const centerY=selectedSize.height/2;addTextToCanvas(centerX,centerY)}else{addLog("请先输入要添加的文字")}}function clearCanvas(){if(confirm('确定要清除画布内容吗？')){ctx.save();ctx.fillStyle='#FFFFFF';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.restore();syncCanvases();addLog("已清除画布内容")}}function syncCanvases(){floatCtx.clearRect(0,0,floatCanvas.width,floatCanvas.height);floatCtx.drawImage(canvas,0,0)}function changeImageScale(delta){if(!sourceImage)return;imageScale=Math.max(0,Math.min(1000,imageScale+delta));imageScaleSlider.value=imageScale;updateImageScale()}function updateImageScale(){if(!sourceImage)return;imageScale=parseInt(imageScaleSlider.value);imageScaleValue.textContent=`${imageScale}%`;redrawImageWithScaleAndOffset()}function redrawImageWithScaleAndOffset(){if(!sourceImage)return;ctx.fillStyle='#FFFFFF';ctx.fillRect(0,0,canvas.width,canvas.height);const scale=imageScale/100;let scaledWidth=sourceImage.width*scale;let scaledHeight=sourceImage.height*scale;ctx.save();ctx.translate(imageOffset.x+scaledWidth/2,imageOffset.y+scaledHeight/2);ctx.rotate((imageRotation*Math.PI)/180);if(imageRotation%180!==0){[scaledWidth,scaledHeight]=[scaledHeight,scaledWidth]}ctx.drawImage(sourceImage,-scaledWidth/2,-scaledHeight/2,scaledWidth,scaledHeight);ctx.restore();syncCanvases()}function fitImageToCanvas(){if(!sourceImage)return;const selectedSize=getSelectedCanvasSize();let canvasWidth=selectedSize.width;let canvasHeight=selectedSize.height;const scaleX=canvasWidth/sourceImage.width;const scaleY=canvasHeight/sourceImage.height;const scale=Math.min(scaleX,scaleY);imageScale=scale*100;imageScaleSlider.value=imageScale;imageScaleValue.textContent=`${imageScale.toFixed(0)}%`;imageOffset.x=(canvasWidth-sourceImage.width*scale)/2;imageOffset.y=(canvasHeight-sourceImage.height*scale)/2;redrawImageWithScaleAndOffset();addLog("图片已适应画布大小")}function fillCanvas(){if(!sourceImage)return;const selectedSize=getSelectedCanvasSize();let canvasWidth=selectedSize.width;let canvasHeight=selectedSize.height;const scaleX=canvasWidth/sourceImage.width;const scaleY=canvasHeight/sourceImage.height;imageScale=Math.max(scaleX,scaleY)*100;imageScaleSlider.value=imageScale;imageScaleValue.textContent=`${imageScale.toFixed(0)}%`;imageOffset.x=0;imageOffset.y=0;redrawImageWithScaleAndOffset();addLog("图片已铺满画布")}function centerImageOnCanvas(){if(!sourceImage)return;const selectedSize=getSelectedCanvasSize();let canvasWidth=selectedSize.width;let canvasHeight=selectedSize.height;const scale=imageScale/100;let scaledWidth=sourceImage.width*scale;let scaledHeight=sourceImage.height*scale;if(imageRotation%180!==0){[scaledWidth,scaledHeight]=[scaledHeight,scaledWidth]}imageOffset.x=(canvasWidth-scaledWidth)/2;imageOffset.y=(canvasHeight-scaledHeight)/2;redrawImageWithScaleAndOffset();addLog("图片已居中显示")}function rotateImage(degrees){if(!sourceImage){addLog("请先上传图片");return}imageRotation=(imageRotation+degrees)%360;redrawImageWithScaleAndOffset();addLog(`图片已旋转至${imageRotation}°`)}function resizeImage(widthDelta,heightDelta){if(!sourceImage||!originalImage)return;const aspectRatio=originalImage.width/originalImage.height;let newWidth=sourceImage.width+widthDelta;let newHeight=sourceImage.height+heightDelta;newWidth=Math.max(50,newWidth);newHeight=Math.max(50,newHeight);imageWidthInput.value=Math.round(newWidth);imageHeightInput.value=Math.round(newHeight);const newImage=new Image();newImage.onload=function(){sourceImage=newImage;redrawImageWithScaleAndOffset();addLog(`图片尺寸已调整为:${newWidth}×${newHeight}`)};const tempCanvas=document.createElement('canvas');tempCanvas.width=newWidth;tempCanvas.height=newHeight;const tempCtx=tempCanvas.getContext('2d');tempCtx.drawImage(originalImage,0,0,newWidth,newHeight);newImage.src=tempCanvas.toDataURL()}function applyImageDimensions(){const width=parseInt(imageWidthInput.value);const height=parseInt(imageHeightInput.value);if(isNaN(width)||isNaN(height)||width<50||height<50){addLog("请输入有效的尺寸（最小50x50像素）");return}if(originalImage){const newImage=new Image();newImage.onload=function(){sourceImage=newImage;fitImageToCanvas();addLog(`图像尺寸已设置为:${width}×${height}`)};const tempCanvas=document.createElement('canvas');tempCanvas.width=width;tempCanvas.height=height;const tempCtx=tempCanvas.getContext('2d');tempCtx.drawImage(originalImage,0,0,width,height);newImage.src=tempCanvas.toDataURL()}else{addLog(`图像尺寸已设置为:${width}×${height}`)}}function handleImageUpload(e){const file=e.target.files[0];if(!file)return;document.getElementById('fileInfo').textContent=`文件名:${file.name}(${formatFileSize(file.size)})`;document.getElementById('fileInfo').classList.remove('hidden');const reader=new FileReader();reader.onload=function(event){const img=new Image();img.onload=function(){originalImage=new Image();originalImage.src=img.src;sourceImage=new Image();sourceImage.src=img.src;imageRotation=0;imageWidthInput.value=img.width;imageHeightInput.value=img.height;fitImageToCanvas();saveOriginalCanvasState();addLog(`已加载图片:${file.name}`);addLog(`图片原始尺寸:${img.width}×${img.height}`);addLog("提示：按住Shift键拖动图片，或直接点击图片拖动");updateCanvasVisibility()};img.src=event.target.result};reader.readAsDataURL(file)}function saveOriginalCanvasState(){const selectedSize=getSelectedCanvasSize();originalCanvasData=ctx.getImageData(0,0,selectedSize.width,selectedSize.height)}function clearLog(){logContainer.innerHTML='<div class="text-gray-500 italic">操作日志将显示在这里...</div>';addLog('日志已清除')}function preConnect(){if(gattServer!=null&&gattServer.connected){if(bleDevice!=null&&bleDevice.gatt.connected){addLog(`正在断开与${bleDevice.name||'未知设备'}的连接...`);bleDevice.gatt.disconnect()}}else{resetBluetoothVariables();try{navigator.bluetooth.requestDevice({filters:[{namePrefix:'NRF_'}],optionalServices:['32120001-0bf6-448a-9608-1b01a1a8f75c']}).then(device=>{addLog(`已选择设备:${device.name||'NRF设备(未知名称)'}`);bleDevice=device;bleDevice.addEventListener('gattserverdisconnected',disconnect);setTimeout(()=>connect(),300)}).catch(error=>{addLog(`蓝牙设备选择失败:${error.message}`);if(error.name==='NotFoundError'){addLog('未找到NRF前缀的蓝牙设备，请确认设备已开启')}})}catch(e){addLog(`蓝牙操作异常:${e.message}`);addLog('请检查蓝牙是否已开启并授予权限')}}}async function connect(){if(!bleDevice){addLog('连接失败: 未选择蓝牙设备');return}if(epdCharacteristic){addLog('已经连接到设备，无需重复连接');return}try{addLog(`正在连接:${bleDevice.name||'NRF设备(未知名称)'}`);gattServer=await bleDevice.gatt.connect();epdService=await gattServer.getPrimaryService('32120001-0bf6-448a-9608-1b01a1a8f75c');epdCharacteristic=await epdService.getCharacteristic('32120002-0bf6-448a-9608-1b01a1a8f75c');addLog('已成功连接到设备！');await epdCharacteristic.startNotifications();epdCharacteristic.addEventListener('characteristicvaluechanged',(event)=>{handleNotify(event.target.value)});await write(EpdCmd.INIT);document.getElementById("connectbutton").innerHTML='<i class="fa fa-unplug mr-1"></i>断开';updateButtonStatus()}catch(e){addLog(`连接过程出错:${e.message}`);disconnect()}}function disconnect(){if(bleDevice&&bleDevice.gatt.connected){bleDevice.gatt.disconnect()}resetBluetoothVariables();addLog('已断开连接');document.getElementById("connectbutton").innerHTML='<i class="fa fa-plug mr-1"></i>连接';updateButtonStatus()}function resetBluetoothVariables(){gattServer=null;epdService=null;epdCharacteristic=null;msgIndex=0}async function write(cmd,data,withResponse=true){if(!epdCharacteristic){addLog("未连接蓝牙设备");return false}let payload=[cmd];if(data){if(typeof data=='string')data=hex2bytes(data);if(data instanceof Uint8Array)data=Array.from(data);payload.push(...data)}try{if(withResponse)await epdCharacteristic.writeValueWithResponse(Uint8Array.from(payload));else await epdCharacteristic.writeValueWithoutResponse(Uint8Array.from(payload))}catch(e){addLog(`发送失败:${e.message}`);return false}return true}async function writeImage(data,step='bw'){const chunkSize=document.getElementById('mtusize').value-2;const interleavedCount=document.getElementById('interleavedcount').value;const count=Math.ceil(data.length/chunkSize);let chunkIdx=0;let noReplyCount=interleavedCount;const selectedSize=getSelectedCanvasSize();if(selectedSize.name==='2.13_122_250'){noReplyCount=Math.max(1,Math.floor(interleavedCount/2))}for(let i=0;i<data.length;i+=chunkSize){let currentTime=(new Date().getTime()-startTime)/1000.0;setStatus(`${step=='bw'?'黑白':'红色'}包:${chunkIdx+1}/${count},用时:${currentTime.toFixed(1)}s`);const payload=[(step=='bw'?0x0F:0x00)|(i==0?0x00:0xF0),0x00,...data.slice(i,i+chunkSize),];if(noReplyCount>0){await write(EpdCmd.WRITE_IMG,payload,false);noReplyCount--}else{await write(EpdCmd.WRITE_IMG,payload,true);noReplyCount=interleavedCount;if(selectedSize.name==='2.13_122_250'){await new Promise(resolve=>setTimeout(resolve,50))}}chunkIdx++}}function downloadImageFile(){if(!checkCanvasHasContent(canvas)){addLog("请先上传或绘制图像并处理后再下载");return}const selectedSize=getSelectedCanvasSize();const{width,height}=getEffectiveCanvasSize(selectedSize);const rotatedData=getRotatedImageData(canvas,selectedSize,imageRotation);const mode=ditherMode.value;const processedData=processImageData(rotatedData,mode,width,height);const dataSize=processedData.length;const kiloBytes=(dataSize/1024).toFixed(2);const pixels=width*height;const textData=processedData.map(byte=>byte.toString(16).padStart(2,'0')).join(' ');const blob=new Blob([textData],{type:'text/plain'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`e-paper-image-${new Date().getTime()}.txt`;document.body.appendChild(a);a.click();setTimeout(()=>{document.body.removeChild(a);URL.revokeObjectURL(url)},0);addLog(`图像文本文件已下载-数据量:${dataSize}字节(${kiloBytes}KB)，像素:${pixels}`)}function showTimeDialog(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");return}const now=new Date();const localDateTime=new Date(now.getTime()-now.getTimezoneOffset()*60000).toISOString().slice(0,16);datetimeInput.value=localDateTime;timeDialog.classList.remove('hidden')}function hideTimeDialog(){timeDialog.classList.add('hidden')}async function setTime(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");hideTimeDialog();return}const datetime=datetimeInput.value;if(!datetime){addLog("请选择日期和时间");return}const date=new Date(datetime);const timestamp=Math.floor(date.getTime()/1000);const timeData=[(timestamp>>24)&0xFF,(timestamp>>16)&0xFF,(timestamp>>8)&0xFF,timestamp&0xFF];try{setStatus("正在设置时间...");statusContainer.style.display="block";await write(EpdCmd.SET_TIME,timeData);addLog(`已设置时间:${date.toLocaleString()}`);addLog(`时间戳:${timestamp}(0x${timestamp.toString(16).toUpperCase()})`);setTimeout(()=>{statusContainer.style.display='none'},2000)}catch(error){addLog(`设置时间失败:${error.message}`)}finally{hideTimeDialog()}}async function setClockMode(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");return}try{setStatus("正在切换到时钟模式...");statusContainer.style.display="block";await write(EpdCmd.SET_MODE,[DisplayMode.CLOCK]);currentMode='clock';addLog("已切换到时钟模式");setTimeout(()=>{statusContainer.style.display='none'},2000)}catch(error){addLog(`切换模式失败:${error.message}`)}}async function setCalendarMode(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");return}try{setStatus("正在切换到日历模式...");statusContainer.style.display="block";await write(EpdCmd.SET_MODE,[DisplayMode.CALENDAR]);currentMode='calendar';addLog("已切换到日历模式");setTimeout(()=>{statusContainer.style.display='none'},2000)}catch(error){addLog(`切换模式失败:${error.message}`)}}async function clearScreen(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");return}if(!confirm('确定要清空墨水屏显示内容吗？')){return}try{setStatus("正在清空屏幕...");statusContainer.style.display="block";await write(EpdCmd.CLEAR);await write(EpdCmd.REFRESH);addLog("已清空墨水屏显示内容");setTimeout(()=>{statusContainer.style.display='none'},2000)}catch(error){addLog(`清空屏幕失败:${error.message}`)}}function getEffectiveCanvasSize(originalSize){let width=originalSize.width;let height=originalSize.height;if(imageRotation%180!==0){[width,height]=[height,width]}return{width,height}}function getRotatedImageData(canvas,originalSize,rotation){const tempCanvas=document.createElement('canvas');const tempCtx=tempCanvas.getContext('2d');const{width,height}=getEffectiveCanvasSize(originalSize);tempCanvas.width=width;tempCanvas.height=height;tempCtx.save();if(rotation===90){tempCtx.translate(width,0);tempCtx.rotate(Math.PI/2)}else if(rotation===180){tempCtx.translate(width,height);tempCtx.rotate(Math.PI)}else if(rotation===270){tempCtx.translate(0,height);tempCtx.rotate(3*Math.PI/2)}tempCtx.drawImage(canvas,0,0);tempCtx.restore();return tempCtx.getImageData(0,0,width,height)}function getDitherAlgorithmName(alg){const names={'floydSteinberg':'Floyd-Steinberg','atkinson':'Atkinson','bayer':'Bayer','stucki':'Stucki','jarvis':'Jarvis-Judice-Ninke'};return names[alg]||alg}function setDitherMode(mode){ditherMode.value=mode;addLog(`已选择${mode==='blackWhiteColor'?'黑白':'黑白红'}模式`)}function onDitherAlgChange(e){currentParams.ditherAlg=e.target.value;addLog(`已选择${getDitherAlgorithmName(currentParams.ditherAlg)}抖动算法`)}function getSelectedCanvasSize(){const selectedSizeName=document.getElementById('canvasSize').value;return canvasSizes.find(size=>size.name===selectedSizeName)||canvasSizes[1]}let originalImageData=null;function updateCanvasSize(keepContent=false){const selectedSize=getSelectedCanvasSize();const hasContent=checkCanvasHasContent(canvas);imageWidthInput.value=selectedSize.width;imageHeightInput.value=selectedSize.height;canvas.width=selectedSize.width;canvas.height=selectedSize.height;floatCanvas.width=selectedSize.width;floatCanvas.height=selectedSize.height;if(keepContent&&hasContent){if(originalCanvasData){ctx.putImageData(originalCanvasData,0,0)}}else{ctx.fillStyle='#FFFFFF';ctx.fillRect(0,0,selectedSize.width,selectedSize.height)}syncCanvases();processedImageInfo.textContent=`${selectedSize.width}×${selectedSize.height}像素`;updateCanvasVisibility()}function updateDitcherOptions(){const epdDriverSelect=document.getElementById('epddriver');const selectedOption=epdDriverSelect.options[epdDriverSelect.selectedIndex];const colorMode=selectedOption.getAttribute('data-color');const canvasSize=selectedOption.getAttribute('data-size');if(colorMode)ditherMode.value=colorMode;if(canvasSize){const sizeExists=canvasSizes.some(s=>s.name===canvasSize);if(sizeExists){document.getElementById('canvasSize').value=canvasSize}}updateCanvasSize(true)}function processImage(){saveOriginalCanvasState();addLog(`开始处理图片，使用${getDitherAlgorithmName(currentParams.ditherAlg)}算法...`);const selectedSize=getSelectedCanvasSize();let imageData=ctx.getImageData(0,0,selectedSize.width,selectedSize.height);imageData=adjustImageParameters(imageData,currentParams);const mode=ditherMode.value;let processedResult;if(mode==='blackWhiteColor'){processedResult=convertToBlackWhite(imageData,currentParams)}else if(mode==='threeColor'){processedResult=convertToBlackWhiteRed(imageData,currentParams)}ctx.putImageData(processedResult.imageData,0,0);syncCanvases();processedImageInfo.textContent=`${selectedSize.width}×${selectedSize.height}像素(${mode==='blackWhiteColor'?'黑白':'黑白红'})`;addLog(`图片处理完成`);updateCanvasVisibility()}async function sendimg(){if(!epdCharacteristic){addLog("请先连接蓝牙设备！");return}const canvasSize=document.getElementById('canvasSize').value;const ditherMode=document.getElementById('ditherMode').value;const epdDriverSelect=document.getElementById('epddriver');const selectedOption=epdDriverSelect.options[epdDriverSelect.selectedIndex];if(selectedOption.getAttribute('data-size')!==canvasSize){if(!confirm("警告：画布尺寸和驱动不匹配，是否继续？"))return}startTime=new Date().getTime();setStatus("正在传输图片...");statusContainer.style.display="block";addLog("开始传输原始画布数据到墨水屏...");const selectedSize=getSelectedCanvasSize();const{width,height}=getEffectiveCanvasSize(selectedSize);const rotatedData=getRotatedImageData(canvas,selectedSize,imageRotation);const processedData=processImageData(rotatedData,ditherMode,width,height);updateButtonStatus(true);try{await write(EpdCmd.SET_MODE,[DisplayMode.IMAGE]);currentMode='image';if(ditherMode==='threeColor'){const halfLength=Math.floor(processedData.length/2);await writeImage(processedData.slice(0,halfLength),'bw');await writeImage(processedData.slice(halfLength),'red')}else if(ditherMode==='blackWhiteColor'){await writeImage(processedData,'bw')}else{addLog("当前设备不支持此颜色模式");updateButtonStatus();return}await write(EpdCmd.REFRESH);const endTime=new Date().getTime();const duration=((endTime-startTime)/1000).toFixed(2);setStatus(`传输成功！耗时${duration}秒`);addLog(`原始画布数据传输成功！耗时${duration}秒`);addLog("请等待屏幕刷新完成")}catch(error){setStatus("传输失败");addLog(`传输失败:${error.message}`)}finally{updateButtonStatus(false);setTimeout(()=>{statusContainer.style.display='none'},5000)}}function adjustImageParameters(imageData,params){const data=imageData.data;const saturation=params.saturation/100;const brightness=params.brightness/100;const contrast=params.contrast/100;const diffusion=params.diffusion/100;const contrastFactor=contrast!==0?(259*(contrast+255))/(255*(259-contrast)):1;const originalData=new Uint8ClampedArray(data);for(let i=0;i<data.length;i+=4){let r=Math.min(255,Math.max(0,originalData[i]*brightness));let g=Math.min(255,Math.max(0,originalData[i+1]*brightness));let b=Math.min(255,Math.max(0,originalData[i+2]*brightness));r=Math.min(255,Math.max(0,contrastFactor*(r-128)+128));g=Math.min(255,Math.max(0,contrastFactor*(g-128)+128));b=Math.min(255,Math.max(0,contrastFactor*(b-128)+128));const gray=0.299*r+0.587*g+0.114*b;r=Math.min(255,Math.max(0,gray+saturation*(r-gray)));g=Math.min(255,Math.max(0,gray+saturation*(g-gray)));b=Math.min(255,Math.max(0,gray+saturation*(b-gray)));if(diffusion>0){const width=imageData.width;const x=(i/4)%width;const y=Math.floor((i/4)/width);if(x>0&&y>0){const neighborIndex=i-4*(width+1);r=Math.floor(r*(1-diffusion)+originalData[neighborIndex]*diffusion);g=Math.floor(g*(1-diffusion)+originalData[neighborIndex+1]*diffusion);b=Math.floor(b*(1-diffusion)+originalData[neighborIndex+2]*diffusion)}}data[i]=r;data[i+1]=g;data[i+2]=b}return imageData}function convertToBlackWhite(imageData,params){const width=imageData.width;const height=imageData.height;const newImageData=ctx.createImageData(width,height);newImageData.data.set(imageData.data);applyDitheringAlgorithm(newImageData,128,params);return{imageData:newImageData}}function convertToBlackWhiteRed(imageData,params){const width=imageData.width;const height=imageData.height;const newImageData=ctx.createImageData(width,height);newImageData.data.set(imageData.data);const data=newImageData.data;for(let i=0;i<data.length;i+=4){const r=data[i];const g=data[i+1];const b=data[i+2];if(r>180&&g<r*0.6&&b<r*0.6){data[i+3]=1}else{const gray=0.299*r+0.587*g+0.114*b;data[i]=gray;data[i+1]=gray;data[i+2]=gray;data[i+3]=0}}applyDitheringAlgorithm(newImageData,100,params,true);for(let i=0;i<data.length;i+=4){if(data[i+3]===1){data[i]=255;data[i+1]=0;data[i+2]=0}else{const color=data[i]>100?255:0;data[i]=data[i+1]=data[i+2]=color}data[i+3]=255}return{imageData:newImageData}}function applyDitheringAlgorithm(imageData,threshold,params,useAlphaMask=false){const data=imageData.data;const width=imageData.width;const height=imageData.height;const algorithm=params.ditherAlg;const diffusion=params.diffusion/100;const pixels=new Uint8ClampedArray(data);for(let y=0;y<height;y++){for(let x=0;x<width;x++){const index=(y*width+x)*4;if(useAlphaMask&&pixels[index+3]===1){continue}const gray=pixels[index];const output=gray<threshold?0:255;const error=gray-output;const errorScaling=1+diffusion;switch(algorithm){case'floydSteinberg':propagateError(pixels,x,y,width,height,error*errorScaling,7/16,1,0);propagateError(pixels,x,y,width,height,error*errorScaling,3/16,-1,1);propagateError(pixels,x,y,width,height,error*errorScaling,5/16,0,1);propagateError(pixels,x,y,width,height,error*errorScaling,1/16,1,1);break;case'atkinson':propagateError(pixels,x,y,width,height,error*errorScaling,1/8,1,0);propagateError(pixels,x,y,width,height,error*errorScaling,1/8,2,0);propagateError(pixels,x,y,width,height,error*errorScaling,1/8,-1,1);propagateError(pixels,x,y,width,height,error*errorScaling,1/8,0,1);propagateError(pixels,x,y,width,height,error*errorScaling,1/8,1,1);propagateError(pixels,x,y,width,height,error*errorScaling,1/8,0,2);break;default:break}data[index]=output;data[index+1]=output;data[index+2]=output}}}function propagateError(pixels,x,y,width,height,error,factor,dx,dy){const nx=x+dx;const ny=y+dy;if(nx>=0&&nx<width&&ny>=0&&ny<height){const index=(ny*width+nx)*4;pixels[index]=Math.max(0,Math.min(255,pixels[index]+error*factor))}}function processImageData(imageData,mode){const width=imageData.width;const height=imageData.height;const data=imageData.data;let processedData;if(mode==='sixColor'){processedData=new Uint8Array(width*height);for(let y=0;y<height;y++){for(let x=0;x<width;x++){const index=(y*width+x)*4;const r=data[index];const g=data[index+1];const b=data[index+2];const closest=findClosestColor(r,g,b,mode);const newIndex=(x*height)+(height-1-y);processedData[newIndex]=closest.value}}}else if(mode==='fourColor'){processedData=new Uint8Array(Math.ceil((width*height)/4));for(let y=0;y<height;y++){for(let x=0;x<width;x++){const index=(y*width+x)*4;const r=data[index];const g=data[index+1];const b=data[index+2];const closest=findClosestColor(r,g,b,mode);const colorValue=closest.value;const newIndex=(y*width+x)/4|0;const shift=6-((x%4)*2);processedData[newIndex]|=(colorValue<<shift)}}}else if(mode==='blackWhiteColor'){const byteWidth=Math.ceil(width/8);processedData=new Uint8Array(byteWidth*height);const threshold=140;for(let y=0;y<height;y++){for(let x=0;x<width;x++){const index=(y*width+x)*4;const r=data[index];const g=data[index+1];const b=data[index+2];const grayscale=Math.round(0.299*r+0.587*g+0.114*b);const bit=grayscale>=threshold?1:0;const byteIndex=y*byteWidth+Math.floor(x/8);const bitIndex=7-(x%8);processedData[byteIndex]|=(bit<<bitIndex)}}}else if(mode==='threeColor'){const byteWidth=Math.ceil(width/8);const blackWhiteThreshold=140;const redThreshold=160;const blackWhiteData=new Uint8Array(height*byteWidth);const redWhiteData=new Uint8Array(height*byteWidth);for(let y=0;y<height;y++){for(let x=0;x<width;x++){const index=(y*width+x)*4;const r=data[index];const g=data[index+1];const b=data[index+2];const grayscale=Math.round(0.299*r+0.587*g+0.114*b);const blackWhiteBit=grayscale>=blackWhiteThreshold?1:0;const blackWhiteByteIndex=y*byteWidth+Math.floor(x/8);const blackWhiteBitIndex=7-(x%8);if(blackWhiteBit){blackWhiteData[blackWhiteByteIndex]|=(0x01<<blackWhiteBitIndex)}else{blackWhiteData[blackWhiteByteIndex]&=~(0x01<<blackWhiteBitIndex)}const redWhiteBit=(r>redThreshold&&r>g&&r>b)?0:1;const redWhiteByteIndex=y*byteWidth+Math.floor(x/8);const redWhiteBitIndex=7-(x%8);if(redWhiteBit){redWhiteData[redWhiteByteIndex]|=(0x01<<redWhiteBitIndex)}else{redWhiteData[redWhiteByteIndex]&=~(0x01<<redWhiteBitIndex)}}}processedData=new Uint8Array(blackWhiteData.length+redWhiteData.length);processedData.set(blackWhiteData,0);processedData.set(redWhiteData,blackWhiteData.length)}return processedData}function toggleCanvas(){if(floatingCanvasContainer.classList.contains('hidden')){floatingCanvasContainer.classList.remove('hidden');toggleCanvasFloat.innerHTML='<i class="fa fa-compress mr-1"></i>隐藏画布';addLog("已显示浮动画布")}else{hideCanvas()}}function hideCanvas(){floatingCanvasContainer.classList.add('hidden');toggleCanvasFloat.innerHTML='<i class="fa fa-arrows-alt mr-1"></i>浮动画布';addLog("已隐藏浮动画布")}function updateCanvasVisibility(){const hasContent=checkCanvasHasContent(canvas);if(hasContent){noImagePlaceholder.classList.add('hidden');canvas.classList.remove('hidden');floatPreviewCanvas.classList.remove('hidden')}else{noImagePlaceholder.classList.remove('hidden');canvas.classList.add('hidden');floatPreviewCanvas.classList.add('hidden')}}function checkCanvasHasContent(canvasEl){const ctx=canvasEl.getContext('2d');const imageData=ctx.getImageData(0,0,canvasEl.width,canvasEl.height);const data=imageData.data;for(let i=0;i<data.length;i+=4){if(data[i]!==255||data[i+1]!==255||data[i+2]!==255){return true}}return false}function startDrag(e){isDragging=true;const rect=floatingCanvasContainer.getBoundingClientRect();dragOffset.x=e.clientX-rect.left;dragOffset.y=e.clientY-rect.top}function drag(e){if(!isDragging)return;e.preventDefault();const newX=e.clientX-dragOffset.x;const newY=e.clientY-dragOffset.y;const windowWidth=window.innerWidth;const windowHeight=window.innerHeight;const canvasWidth=floatingCanvasContainer.offsetWidth;const canvasHeight=floatingCanvasContainer.offsetHeight;const boundedX=Math.max(0,Math.min(newX,windowWidth-canvasWidth));const boundedY=Math.max(0,Math.min(newY,windowHeight-canvasHeight));floatingCanvasContainer.style.left=`${boundedX}px`;floatingCanvasContainer.style.top=`${boundedY}px`}function stopDrag(){isDragging=false}function startResize(e){isResizing=true;e.preventDefault()}function resize(e){if(!isResizing)return;e.preventDefault();const containerRect=floatingCanvasContainer.getBoundingClientRect();const newWidth=e.clientX-containerRect.left;const newHeight=e.clientY-containerRect.top;if(newWidth>200&&newHeight>150){floatingCanvasContainer.style.width=`${newWidth}px`;floatingCanvasContainer.style.height=`${newHeight}px`}}function stopResize(){isResizing=false}function resetProcessing(){if(originalCanvasData){ctx.putImageData(originalCanvasData,0,0);syncCanvases();const selectedSize=getSelectedCanvasSize();processedImageInfo.textContent=`${selectedSize.width}×${selectedSize.height}像素`;addLog("已重置处理效果，保留原始图片和设置")}else{ctx.fillStyle='#FFFFFF';ctx.fillRect(0,0,canvas.width,canvas.height);syncCanvases();addLog("已清空画布，保留设置和图片")}}function addLog(message){const timestamp=new Date().toLocaleTimeString();const logEntry=document.createElement('div');logEntry.className='mb-1 border-b border-gray-100 pb-1 last:border-0 last:mb-0 last:pb-0';logEntry.innerHTML=`<span class="text-gray-500">[${timestamp}]</span><span class="text-gray-800">${message}</span>`;if(logContainer.querySelector('.italic')){logContainer.innerHTML=''}logContainer.appendChild(logEntry);logContainer.scrollTop=logContainer.scrollHeight;while(logContainer.childNodes.length>30){logContainer.removeChild(logContainer.firstChild)}}function setStatus(statusText){document.getElementById("status").textContent=statusText}function updateButtonStatus(disabled=false){const connected=gattServer!=null&&gattServer.connected;const isDisabled=disabled||!connected;btnSend.disabled=isDisabled;btnSetTime.disabled=isDisabled;btnClockMode.disabled=isDisabled;btnCalendarMode.disabled=isDisabled;btnClearScreen.disabled=isDisabled;if(isDisabled){btnSend.classList.add('opacity-50','cursor-not-allowed');btnSetTime.classList.add('opacity-50','cursor-not-allowed');btnClockMode.classList.add('opacity-50','cursor-not-allowed');btnCalendarMode.classList.add('opacity-50','cursor-not-allowed');btnClearScreen.classList.add('opacity-50','cursor-not-allowed')}else{btnSend.classList.remove('opacity-50','cursor-not-allowed');btnSetTime.classList.remove('opacity-50','cursor-not-allowed');btnClockMode.classList.remove('opacity-50','cursor-not-allowed');btnCalendarMode.classList.remove('opacity-50','cursor-not-allowed');btnClearScreen.classList.remove('opacity-50','cursor-not-allowed')}}function reConnect(){addLog("尝试重新连接设备...");preConnect()}function handleNotify(value){console.log("收到通知:",value)}function hex2bytes(hex){const bytes=[];for(let i=0;i<hex.length;i+=2){bytes.push(parseInt(hex.substr(i,2),16))}return bytes}function formatFileSize(bytes){if(bytes<1024)return bytes+" B";else if(bytes<1048576)return(bytes/1024).toFixed(2)+" KB";else return(bytes/1048576).toFixed(2)+" MB"}async function set_EPD_CMD_J_H(){await write(EpdCmd.EPD_CMD_J_H,document.getElementById("epdpins").value)}async function set_EPD_CMD_N_Z(){const hour=document.getElementById('N_Z_hour').value;const min=document.getElementById('N_Z_min').value;const N_Z_start=document.getElementById('N_Z_start').value;const bytes=[4];bytes[0]=0;bytes[1]=0;bytes[2]=hour;bytes[3]=min;bytes[4]=N_Z_start;await write(EpdCmd.EPD_CMD_N_Z,bytes)}async function set_EPD_CMD_D_S(){const hour=document.getElementById('D_S_hour').value;const min=document.getElementById('D_S_min').value;const D_S_start=document.getElementById('D_S_start').value;const bytes=[4];bytes[0]=0;bytes[1]=0;bytes[2]=hour;bytes[3]=min;bytes[4]=D_S_start;await write(EpdCmd.EPD_CMD_D_S,bytes)}async function set_EPD_CMD_J_S(){const hour=document.getElementById('J_S_hour').value;const min=document.getElementById('J_S_min').value;const J_S_start=document.getElementById('J_S_start').value;const bytes=[4];bytes[0]=0;bytes[1]=0;bytes[2]=hour;bytes[3]=min;bytes[4]=J_S_start;await write(EpdCmd.EPD_CMD_J_S,bytes)}async function set_EPD_CMD_LED(){const color_led=document.getElementById('color_led').value;const liang_time=document.getElementById('liang_time').value;const liang_add=document.getElementById('liang_add').value;const liangdu=document.getElementById('liangdu').value;const liang_s=document.getElementById('liang_s').value;const bytes=[5];bytes[0]=color_led;bytes[1]=liang_time;bytes[2]=liang_add;bytes[3]=liangdu;bytes[4]=liang_s;await write(EpdCmd.EPD_CMD_LED,bytes)}async function set_EPD_CMD_LED1(){const color_led=document.getElementById('color_led').value;const liang_time=document.getElementById('liang_time').value;const liang_add=document.getElementById('liang_add').value;const liangdu=document.getElementById('liangdu').value;const liang_s=document.getElementById('liang_s').value;const bytes=[5];bytes[0]=color_led;bytes[1]=liang_time;bytes[2]=liang_add;bytes[3]=liangdu;bytes[4]=liang_s;await write(EpdCmd.EPD_CMD_4_LED,bytes)}async function set_EPD_CMD_MY(){const fanxian=document.getElementById('fanxian').value;const xuanzhuan=document.getElementById('xuanzhuan').value;const qiangzhi_shuaxing=document.getElementById('qiangzhi_shuaxing').value;const jushua_time=document.getElementById('jushua_time').value;const bytes=[4];bytes[0]=fanxian;bytes[1]=xuanzhuan;bytes[2]=qiangzhi_shuaxing;bytes[3]=jushua_time;await write(EpdCmd.EPD_CMD_MY,bytes)}async function set_EPD_CMD_COLOR(){const color_1=document.getElementById('color_1').value;const time_color=document.getElementById('time_color').value;const wendu_color=document.getElementById('wendu_color').value;const gongli_color=document.getElementById('gongli_color').value;const shichen_color=document.getElementById('shichen_color').value;const jieqi_color=document.getElementById('jieqi_color').value;const r_jushua_time=document.getElementById('r_jushua_time').value;const bytes=[7];bytes[0]=color_1;bytes[1]=time_color;bytes[2]=wendu_color;bytes[3]=gongli_color;bytes[4]=shichen_color;bytes[5]=jieqi_color;bytes[6]=r_jushua_time;await write(EpdCmd.EPD_CMD_COLOR,bytes)}async function set_EPD_CMD_4_MS(){const fanxian=document.getElementById('fanxian1').value;const xuanzhuan=document.getElementById('xuanzhuan1').value;const jushua_time=document.getElementById('jushua_time1').value;const xianshi_peizhi=document.getElementById('xianshi_peizhi').value;const moshi_id=document.getElementById('moshi_id').value;const color_11=document.getElementById('color_11').value;const silian_ziti=document.getElementById('silian_ziti').value;const bytes=[7];bytes[0]=fanxian;bytes[1]=xuanzhuan;bytes[2]=jushua_time;bytes[3]=xianshi_peizhi;bytes[4]=moshi_id;bytes[5]=color_11;bytes[6]=silian_ziti await write(EpdCmd.EPD_CMD_4_MS,bytes)}async function syncTime(mode){const timestamp=new Date().getTime()/1000;const data=new Uint8Array([(timestamp>>24)&0xFF,(timestamp>>16)&0xFF,(timestamp>>8)&0xFF,timestamp&0xFF,-(new Date().getTimezoneOffset()/60),mode]);if(await write(EpdCmd.SET_TIME,data)){addLog("已同步时间！")}}async function set_EPD_CMD_4_ZF(mode){const bytes=[1];bytes[0]=mode;await write(EpdCmd.EPD_CMD_4_ZF,bytes);if(mode==0){syncTime(2);addLog("主机已同步时间！")}}window.onload=init;
